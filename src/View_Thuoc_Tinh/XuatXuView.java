/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View_Thuoc_Tinh;

import Model.XuatXu;
import Repository.CPURepository;
import Repository.XuatXuRepository;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import raven.application.form.other.SanPham;

/**
 *
 * @author nothank
 */
public class XuatXuView extends javax.swing.JFrame {

    private XuatXuRepository repo = new XuatXuRepository();
    private DefaultTableModel dtm;
    private ArrayList<XuatXuView> arrC = new ArrayList<>();

    /**
     * Creates new form CPU
     */
    public XuatXuView() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.showXuatXu(repo.getAll());
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE); // Ngăn cửa sổ tự động đóng
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                // Hiển thị hộp thoại xác nhận khi đóng
                int option = JOptionPane.showConfirmDialog(null, "Bạn có muốn quay về trang chủ?", "Xác nhận thoát", JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION) {
                    goToHomePage(); // Quay về trang chính
                }
            }
        });
    }

    private void showXuatXu(ArrayList<Model.XuatXu> arr) {
        dtm = (DefaultTableModel) this.tblCPU.getModel();
        dtm.setRowCount(0);
        for (Model.XuatXu xuatXu : arr) {
            Object[] row = {
                xuatXu.getID_Xuat_Xu(),
                xuatXu.getXuat_Xu()
            };
            dtm.addRow(row);
        }
    }

    private void goToHomePage() {
        // Logic để quay về trang chính
        SanPham sanPham = new SanPham(); // Tạo đối tượng trang chính
        sanPham.setVisible(true); // Hiển thị trang chính
        this.dispose(); // Đóng cửa sổ hiện tại
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCPU = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtIDXuatXu = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtXuatXu = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblCPU.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID_Xuất_Xứ", "Xuất_Xứ"
            }
        ));
        tblCPU.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCPUMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCPU);

        jLabel1.setText("ID_Xuất_Xứ");

        txtIDXuatXu.setEnabled(false);

        jLabel2.setText("Xuất Xứ");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel3.setText("Tìm Kiếm");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIDXuatXu)
                            .addComponent(txtXuatXu)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btnXoa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSua, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnThem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(0, 82, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIDXuatXu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtXuatXu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXoa)
                        .addGap(18, 18, 18))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblCPUMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCPUMouseClicked
        // TODO add your handling code here:
        int row = this.tblCPU.getSelectedRow();
        if (row == -1) {
            return; // Nếu không có hàng nào được chọn thì thoát
        }

// Lấy dữ liệu từ hàng được chọn
        String ID_String = this.tblCPU.getValueAt(row, 0).toString(); // 0 là cột chứa ID
        int ID = Integer.parseInt(ID_String);
        String CPU = this.tblCPU.getValueAt(row, 1).toString(); // 1 là cột chứa CPU

// Set giá trị cho các trường text
        this.txtXuatXu.setText(CPU);
        this.txtIDXuatXu.setText(ID_String);
    }//GEN-LAST:event_tblCPUMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        String maXuatXu = txtXuatXu.getText().trim();  // Sử dụng trim() để loại bỏ khoảng trắng đầu và cuối

        if (maXuatXu.isEmpty()) {
            // Kiểm tra nếu trường nhập trống
            JOptionPane.showMessageDialog(null, "Vui lòng nhập mã Xuất Xứ.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;  // Thoát khỏi phương thức nếu không có mã Xuất Xứ
        }

        // Gọi phương thức insertInto từ repo để thêm mã Xuất Xứ
        boolean isInserted = repo.insertInto(maXuatXu);  // Giả sử phương thức trả về true/false

        if (isInserted) {
            // Thông báo thêm thành công
            JOptionPane.showMessageDialog(null, "Thêm thành công mã Xuất Xứ: " + maXuatXu, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Thông báo thêm thất bại
            JOptionPane.showMessageDialog(null, "Thêm thất bại. Mã Xuất Xứ đã tồn tại hoặc xảy ra lỗi.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }

        // Hiển thị danh sách Xuất Xứ sau khi thêm
        this.showXuatXu(repo.getAll());
        this.clear();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int ID;
        try {
            ID = Integer.parseInt(txtIDXuatXu.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "ID không hợp lệ.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String maXuatXu = txtXuatXu.getText().trim();  // Sử dụng trim() để loại bỏ khoảng trắng đầu và cuối

        if (maXuatXu.isEmpty()) {
            // Kiểm tra nếu trường nhập trống
            JOptionPane.showMessageDialog(null, "Vui lòng nhập mã Xuất Xứ.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;  // Thoát khỏi phương thức nếu không có mã Xuất Xứ
        }

        // Gọi phương thức update từ repo để cập nhật mã Xuất Xứ
        boolean isUpdated = repo.update(ID, maXuatXu);  // Giả sử phương thức trả về true/false

        if (isUpdated) {
            // Thông báo cập nhật thành công
            JOptionPane.showMessageDialog(null, "Cập nhật thành công mã Xuất Xứ: " + maXuatXu, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Thông báo cập nhật thất bại
            JOptionPane.showMessageDialog(null, "Cập nhật thất bại. Mã Xuất Xứ đã tồn tại hoặc xảy ra lỗi.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }

        // Hiển thị danh sách Xuất Xứ sau khi cập nhật
        this.showXuatXu(repo.getAll());
        this.clear();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        String maXuatXu = txtXuatXu.getText().trim();  // Sử dụng trim() để loại bỏ khoảng trắng đầu và cuối

        if (maXuatXu.isEmpty()) {
            // Kiểm tra nếu trường nhập trống
            JOptionPane.showMessageDialog(null, "Vui lòng nhập mã Xuất Xứ để xóa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;  // Thoát khỏi phương thức nếu không có mã Xuất Xứ
        }

        // Gọi phương thức delete từ repo để xóa mã Xuất Xứ
        boolean isDeleted = repo.delete(maXuatXu);  // Giả sử phương thức trả về true/false

        if (isDeleted) {
            // Thông báo xóa thành công
            JOptionPane.showMessageDialog(null, "Xóa thành công mã Xuất Xứ: " + maXuatXu, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Thông báo xóa thất bại
            JOptionPane.showMessageDialog(null, "Xóa thất bại. Vui lòng kiểm tra lại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }

        // Hiển thị danh sách Xuất Xứ sau khi xóa
        this.showXuatXu(repo.getAll());
        this.clear();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed

    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:        // TODO add your handling code here:

        String keyword = txtSearch.getText().trim();  // Lấy từ khóa tìm kiếm từ JTextField
        if (keyword.isEmpty()) {
            // Nếu không có từ khóa, hiển thị lại toàn bộ danh sách
            showXuatXu(repo.getAll());
        } else {
            // Gọi phương thức tìm kiếm từ repo, trả về danh sách kết quả phù hợp
            ArrayList<XuatXu> result = repo.search(keyword);
            showXuatXu(result);  // Hiển thị danh sách kết quả tìm kiếm
        }


    }//GEN-LAST:event_txtSearchKeyReleased
    public void clear() {
        this.txtXuatXu.setText("");
        this.txtIDXuatXu.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XuatXuView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XuatXuView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XuatXuView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XuatXuView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new XuatXuView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCPU;
    private javax.swing.JTextField txtIDXuatXu;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtXuatXu;
    // End of variables declaration//GEN-END:variables
}
