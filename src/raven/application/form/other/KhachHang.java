/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package raven.application.form.other;

import Model.KhachHang_Model;
import Repository.KhachHangRepository;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nothank
 */
public class KhachHang extends javax.swing.JPanel {

    KhachHangRepository KHrepo = new KhachHangRepository();
    public KhachHang() {
        initComponents();
        this.loadTable();
    }
        private void loadTable() {
        DefaultTableModel dtm = (DefaultTableModel) this.tblKhachHang.getModel();
        dtm.setRowCount(0);
        for (KhachHang_Model sp : this.KHrepo.fillAll()) {
            Object[] rowData = {
                sp.getIdKH(),
                sp.getMaKH(),
                sp.getTenKH(),
                sp.getEmail(),
                sp.getSDT(),
                sp.isGioiTinh() ? "Nam" : "Nữ",
                sp.getDiaChi(),};
            dtm.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblDiaChi = new javax.swing.JLabel();
        lblIDKhachHang = new javax.swing.JLabel();
        lblMaKH = new javax.swing.JLabel();
        lblHoten = new javax.swing.JLabel();
        lblSDT = new javax.swing.JLabel();
        lblGioiTinh = new javax.swing.JLabel();
        txtIDKhachHang = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtMaKH = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaDiaChi = new javax.swing.JTextArea();
        rdoNu = new javax.swing.JRadioButton();
        lblEmail = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblKhachHang = new javax.swing.JTable();
        btnLamMoi = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        cbbLocGioiTinh = new javax.swing.JComboBox<>();
        cbbLocTinh = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(719, 521));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        lblDiaChi.setText("Địa Chỉ");

        lblIDKhachHang.setText("ID Khách Hàng ");

        lblMaKH.setText("Mã Khách Hàng");

        lblHoten.setText("Họ Tên");

        lblSDT.setText("Số Điện Thoại");

        lblGioiTinh.setText("Giới Tính");

        txtIDKhachHang.setEditable(false);
        txtIDKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDKhachHangActionPerformed(evt);
            }
        });

        txtMaKH.setEditable(false);

        txaDiaChi.setColumns(20);
        txaDiaChi.setRows(5);
        jScrollPane1.setViewportView(txaDiaChi);

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");
        rdoNu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNuActionPerformed(evt);
            }
        });

        lblEmail.setText("Email");

        buttonGroup1.add(rdoNam);
        rdoNam.setText("Nam");
        rdoNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNamActionPerformed(evt);
            }
        });

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        tblKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Khách Hàng", "Mã Khách Hàng", "Họ Tên", "Email", "Số Điện Thoại", "Giới Tính", "Địa Chỉ"
            }
        ));
        tblKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhachHangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblKhachHang);

        btnLamMoi.setText("Làm Mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });

        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        cbbLocGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất Cả", "Nam", "Nữ" }));
        cbbLocGioiTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLocGioiTinhActionPerformed(evt);
            }
        });

        cbbLocTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất Cả", "Địa chỉ 1", "Địa chỉ 2", "Địa chỉ 3", "Địa chỉ 4", "Địa chỉ 5" }));
        cbbLocTinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbbLocTinhMouseClicked(evt);
            }
        });
        cbbLocTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLocTinhActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(707, 707, 707)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblIDKhachHang)
                            .addComponent(lblMaKH)
                            .addComponent(lblHoten)
                            .addComponent(lblSDT)
                            .addComponent(lblEmail)
                            .addComponent(lblGioiTinh)
                            .addComponent(lblDiaChi))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnThem)
                                        .addGap(55, 55, 55)
                                        .addComponent(btnSua))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIDKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rdoNam)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rdoNu)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnLamMoi)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(cbbLocTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbbLocGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTimKiem)
                        .addGap(36, 36, 36))))
            .addGroup(layout.createSequentialGroup()
                .addGap(315, 315, 315)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimKiem))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIDKhachHang)
                            .addComponent(txtIDKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaKH)
                            .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHoten)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSDT)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGioiTinh)
                            .addComponent(rdoNam)
                            .addComponent(rdoNu))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblDiaChi)
                                        .addGap(356, 356, 356))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(217, 217, 217)))
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbbLocTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbLocGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rdoNuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoNuActionPerformed

    private void txtIDKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDKhachHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDKhachHangActionPerformed

    private void rdoNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoNamActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        this.reset();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
        // Lấy thông tin khách hàng từ form
        String tenKH = txtHoTen.getText().trim();
        String email = txtEmail.getText().trim();
        String sdt = txtSDT.getText().trim();
        String diaChi = txaDiaChi.getText().trim();
        boolean gioiTinh = rdoNam.isSelected();

        // Kiểm tra xem các trường thông tin có trống hay không
        if (tenKH.isEmpty() || sdt.isEmpty() || email.isEmpty() || diaChi.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
            return;
        }

        // Kiểm tra số điện thoại: phải là số, có 10 ký tự, bắt đầu là số 0
        if (!sdt.matches("^0\\d{9}$")) {
            JOptionPane.showMessageDialog(this, "Số điện thoại phải là số, có 10 ký tự và bắt đầu bằng số 0.");
            return;
        }

        // Kiểm tra email: phải có đuôi @gmail.com
        if (!email.matches("^[a-zA-Z0-9._%+-]+@gmail\\.com$")) {
            JOptionPane.showMessageDialog(this, "Email phải có định dạng @gmail.com.");
            return;
        }

        // Kiểm tra họ tên: không được chứa số và ký tự đặc biệt
        if (!tenKH.matches("^[a-zA-ZàáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸĐ\\s]+$")) {
            JOptionPane.showMessageDialog(this, "Họ tên không được chứa số và ký tự đặc biệt.");
            return;
        }

        if (KHrepo.isSoDienThoaiExists(sdt)) {
            JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại! Vui lòng nhập số khác.");
            return;     
        }
        if (KHrepo.isEmailExists(email)) {
            JOptionPane.showMessageDialog(this, "Email đã tồn tại! Vui lòng nhập email khác.");
            return;
        }

        // Tạo đối tượng KhachHang_Model (maKH will be generated automatically)
        KhachHang_Model kh = new KhachHang_Model(0, "", tenKH, sdt, email, gioiTinh, diaChi);

        // Thêm vào cơ sở dữ liệu qua repository
        this.KHrepo.insert(kh);
        this.loadTable();

        JOptionPane.showMessageDialog(this, "Thêm khách hàng thành công!");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Thêm khách hàng thất bại!");
    }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
            try {
        // Lấy ID khách hàng cần sửa từ form
        String idKH = txtIDKhachHang.getText();
        String maKH = txtMaKH.getText();
        String tenKH = txtHoTen.getText();
        String email = txtEmail.getText();
        String sdt = txtSDT.getText();
        String diaChi = txaDiaChi.getText();
        boolean gioiTinh = rdoNam.isSelected(); // Nam = true, Nữ = false
        
            if (idKH.isEmpty() || maKH.isEmpty() || tenKH.isEmpty() || sdt.isEmpty() || email.isEmpty() || diaChi.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
                return;
            }
            // Kiểm tra số điện thoại: phải là số, có 10 ký tự, bắt đầu là số 0
            if (!sdt.matches("^0\\d{9}$")) {
                JOptionPane.showMessageDialog(this, "Số điện thoại phải là số, có 10 ký tự và bắt đầu bằng số 0.");
                return;
            }

            // Kiểm tra email: phải có đuôi @gmail.com
            if (!email.matches("^[a-zA-Z0-9._%+-]+@gmail\\.com$")) {
                JOptionPane.showMessageDialog(this, "Email phải có định dạng @gmail.com.");
                return;
            }

            // Kiểm tra họ tên: không được chứa số và ký tự đặc biệt
            if (!tenKH.matches("^[a-zA-ZàáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸĐ\\s]+$")) {
               JOptionPane.showMessageDialog(this, "Họ tên không được chứa số và ký tự đặc biệt.");
               return;
            }
        KhachHang_Model khachHang = new KhachHang_Model(Integer.parseInt(idKH), maKH, tenKH, sdt, email, gioiTinh, diaChi);
        KHrepo.update(khachHang);
        this.loadTable();
        
        JOptionPane.showMessageDialog(this, "Cập nhật khách hàng thành công!");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Cập nhật khách hàng thất bại!");
    }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
       try {
        String keyword = txtTimKiem.getText();
        if (keyword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập từ khóa tìm kiếm!");
            return;
        }

        DefaultTableModel dtm = (DefaultTableModel) this.tblKhachHang.getModel();
        dtm.setRowCount(0); 

        // Gọi phương thức tìm kiếm
        ArrayList<KhachHang_Model> results = this.KHrepo.search(keyword);
        for (KhachHang_Model kh : results) {
            Object[] rowData = {
                kh.getIdKH(),
                kh.getMaKH(),
                kh.getTenKH(),
                kh.getEmail(),
                kh.getSDT(),
                kh.isGioiTinh() ? "Nam" : "Nữ",
                kh.getDiaChi(),
            };
            dtm.addRow(rowData); 
        }

        if (results.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy kết quả nào!");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Tìm kiếm thất bại!");
    }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void tblKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhachHangMouseClicked
    int row = this.tblKhachHang.getSelectedRow();
    if (row == -1) {
        return; // Không có hàng nào được chọn
    }

    // Lấy các giá trị từ bảng
    String id = getValueAt(row, 0);
    String ma = getValueAt(row, 1);
    String ten = getValueAt(row, 2);
    String email = getValueAt(row, 3);
    String sdt = getValueAt(row, 4);
    String gt = getValueAt(row, 5);
    String dt = getValueAt(row, 6);

    // Cập nhật các giá trị vào các trường text
    this.txtIDKhachHang.setText(id);
    this.txtMaKH.setText(ma);
    this.txtHoTen.setText(ten);
    this.txtEmail.setText(email);
    this.txtSDT.setText(sdt);

    // Xử lý giới tính
    if ("Nam".equals(gt.trim())) {
        this.rdoNam.setSelected(true);
    } else {
        this.rdoNu.setSelected(true);
    }

    // Set địa chỉ
    this.txaDiaChi.setText(dt);

    // Kiểm tra mục trong ComboBox
    int selectedIndex = cbbLocTinh.getSelectedIndex();
    if (selectedIndex != -1) {
        Object item = cbbLocTinh.getItemAt(selectedIndex);
        if (item != null) {
            String itemStr = item.toString();
            // Tiếp tục xử lý với itemStr nếu cần
        } else {
            System.out.println("Mục được chọn là null.");
        }
    } else {
        System.out.println("Không có mục nào được chọn.");
    }
}

private String getValueAt(int row, int column) {
    Object value = this.tblKhachHang.getValueAt(row, column);
    return (value != null) ? value.toString() : "";
    }//GEN-LAST:event_tblKhachHangMouseClicked
    
    private void cbbLocTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLocTinhActionPerformed
       this.loc();
       
    }//GEN-LAST:event_cbbLocTinhActionPerformed

    private void cbbLocGioiTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLocGioiTinhActionPerformed
        this.loc();
    }//GEN-LAST:event_cbbLocGioiTinhActionPerformed

    private void cbbLocTinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbbLocTinhMouseClicked
         
    }//GEN-LAST:event_cbbLocTinhMouseClicked
    public void reset() {
        this.txtIDKhachHang.setText("");
        this.txtMaKH.setText("");
        this.txtHoTen.setText("");
        this.txtEmail.setText("");
        this.txtSDT.setText("");
        this.txaDiaChi.setText("");
        this.txtTimKiem.setText("");
        this.rdoNam.setSelected(false);
        this.rdoNu.setSelected(false);
        this.loadTable();
    }
private void loc() {
    String tuKhoaTimKiem = txtTimKiem.getText().trim();
    String diaChiChon = cbbLocTinh.getSelectedItem().toString();
    String gioiTinhChon = cbbLocGioiTinh.getSelectedItem().toString();
    
    DefaultTableModel dtm = (DefaultTableModel) tblKhachHang.getModel();
    dtm.setRowCount(0); // Xóa dữ liệu cũ trong bảng
    
    // Kiểm tra danh sách khách hàng
    ArrayList<KhachHang_Model> danhSachKhachHang = this.KHrepo.fillAll();
    if (danhSachKhachHang == null || danhSachKhachHang.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Danh sách khách hàng trống!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    boolean coKetQua = false;
    HashSet<String> cacTinhHienCo = new HashSet<>();
    
    // Thêm tất cả các tỉnh hiện có trong cbbLocTinh vào HashSet
    for (int i = 0; i < cbbLocTinh.getItemCount(); i++) {
        cacTinhHienCo.add(cbbLocTinh.getItemAt(i).toString());
    }
    
    // Lọc khách hàng
    for (KhachHang_Model khachHang : danhSachKhachHang) {
        boolean trungKhopTuKhoa = khachHang.getTenKH().toLowerCase().contains(tuKhoaTimKiem.toLowerCase())
                || khachHang.getMaKH().toLowerCase().contains(tuKhoaTimKiem.toLowerCase())
                || khachHang.getEmail().toLowerCase().contains(tuKhoaTimKiem.toLowerCase())
                || khachHang.getSDT().contains(tuKhoaTimKiem);
        boolean trungKhopDiaChi = "Tất Cả".equals(diaChiChon) || khachHang.getDiaChi().equals(diaChiChon);
        boolean trungKhopGioiTinh = "Tất Cả".equals(gioiTinhChon) || (gioiTinhChon.equals("Nam") && khachHang.isGioiTinh()) || (gioiTinhChon.equals("Nữ") && !khachHang.isGioiTinh());

        // Nếu khớp tất cả tiêu chí
        if (trungKhopTuKhoa && trungKhopDiaChi && trungKhopGioiTinh) {
            Object[] duLieuDong = {
                khachHang.getIdKH(),
                khachHang.getMaKH(),
                khachHang.getTenKH(),
                khachHang.getEmail(),
                khachHang.getSDT(),
                khachHang.isGioiTinh() ? "Nam" : "Nữ",
                khachHang.getDiaChi(),
            };
            dtm.addRow(duLieuDong);
            coKetQua = true;
        }
        
        // Kiểm tra và thêm tỉnh thành mới vào cbbLocTinh nếu chưa tồn tại
        String tinhKhachHang = khachHang.getDiaChi();
        if (!cacTinhHienCo.contains(tinhKhachHang)) {
            cbbLocTinh.addItem(tinhKhachHang);
            cacTinhHienCo.add(tinhKhachHang); // Cập nhật HashSet
        }
    }

    // Thông báo nếu không tìm thấy kết quả
    if (!coKetQua) {
        JOptionPane.showMessageDialog(null, "Không tìm thấy khách hàng nào khớp với tiêu chí tìm kiếm!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
    }
}







    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbbLocGioiTinh;
    private javax.swing.JComboBox<String> cbbLocTinh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGioiTinh;
    private javax.swing.JLabel lblHoten;
    private javax.swing.JLabel lblIDKhachHang;
    private javax.swing.JLabel lblMaKH;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblKhachHang;
    private javax.swing.JTextArea txaDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtIDKhachHang;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
