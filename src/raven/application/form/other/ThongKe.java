/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package raven.application.form.other;

import Model.ThongKeModel;
import Repository.repoThongke;
import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import raven.application.form.other.EmailSender;


/**
 *
 * @author nothank
 */
public class ThongKe extends javax.swing.JPanel {

    private repoThongke rp = new repoThongke();
    private DefaultTableModel mol = new DefaultTableModel();
    private int i = -1;

    /**
     * Creates new form NewJPanel
     */
    public ThongKe() {
        initComponents();
        this.fillTable(rp.getAllTK());
        txtTongDT.setText("0 VND");
        txtTongHDdaTT.setText("0");
    }

    void fillTable(ArrayList<ThongKeModel> list) {
        mol = (DefaultTableModel) tblThongKe.getModel();
        mol.setRowCount(0);
        for (ThongKeModel x : list) {
            mol.addRow(x.toDataRow());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtTongDT = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTuNgay = new com.toedter.calendar.JDateChooser();
        txtDenNgay = new com.toedter.calendar.JDateChooser();
        btnTK = new javax.swing.JButton();
        btnBC = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtTongHDdaTT = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblThongKe = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        yearComboBox = new javax.swing.JComboBox<>();
        btnBieuDo = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1074, 708));

        jPanel1.setBackground(new java.awt.Color(255, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(329, 159));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setText("Tổng doanh thu");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(txtTongDT))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addGap(27, 27, 27)
                .addComponent(txtTongDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setText("Tìm kiếm theo thời gian");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Từ ngày");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Đến ngày");

        txtTuNgay.setDateFormatString("dd-MMMM-yyyy");

        txtDenNgay.setDateFormatString("dd-MMMM-yyyy");

        btnTK.setBackground(new java.awt.Color(0, 255, 0));
        btnTK.setText("Tìm kiếm");
        btnTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTKActionPerformed(evt);
            }
        });

        btnBC.setBackground(new java.awt.Color(0, 255, 0));
        btnBC.setText("Báo Cáo");
        btnBC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnTK)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(93, 93, 93))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnBC)
                        .addGap(140, 140, 140))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTK)
                    .addComponent(btnBC))
                .addGap(19, 19, 19))
        );

        jPanel4.setBackground(new java.awt.Color(255, 0, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel6.setText("Tổng hóa đơn đã thanh toán");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTongHDdaTT))
                .addGap(51, 51, 51))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel6)
                .addGap(28, 28, 28)
                .addComponent(txtTongHDdaTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        tblThongKe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Hóa Đơn", "Mã Hóa Đơn", "Ngày Thanh Toán", "Tổng Giá", "Trạng Thái"
            }
        ));
        jScrollPane1.setViewportView(tblThongKe);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setText("Tìm kiếm theo năm");

        yearComboBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        yearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2024", "2023", "2022", "2021", "2020", " " }));
        yearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnBieuDo.setBackground(new java.awt.Color(0, 255, 0));
        btnBieuDo.setText("Biểu đồ doanh thu");
        btnBieuDo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBieuDoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 141, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnBieuDo))
                                .addGap(37, 37, 37)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(131, 131, 131)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 118, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBieuDo)
                        .addGap(21, 21, 21)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addGap(35, 35, 35))
        );
    }// </editor-fold>//GEN-END:initComponents

    private boolean check() {
        java.util.Date utilTuNgay = txtTuNgay.getDate(); // Giả sử txtNgayBatDau là JDateChooser
        Date tu = new java.sql.Date(utilTuNgay.getTime());
        java.util.Date utilDenNgay = txtDenNgay.getDate();
        Date den = new java.sql.Date(utilDenNgay.getTime());
        if (tu == null || den == null) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn đầy đủ ngày bắt đầu và ngày kết thúc!");
            return false;
        } else if (tu.before(den)) {
            JOptionPane.showMessageDialog(null, "Ngày kết thúc phải sau ngày bắt đầu!");
            return false;
        } else {
            return true;
        }
    }
    
    // nút tìm kiếm theo khoảng ngày
    private void btnTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTKActionPerformed
        // TODO add your handling code here:

        // Lấy ngày bắt đầu và ngày kết thúc từ người dùng
        java.util.Date utilTuNgay = txtTuNgay.getDate(); // Giả sử txtNgayBatDau là JDateChooser
        Date tu = new java.sql.Date(utilTuNgay.getTime());
        java.util.Date utilDenNgay = txtDenNgay.getDate();
        Date den = new java.sql.Date(utilDenNgay.getTime());

        // Kiểm tra nếu một trong hai ngày trống
        if (tu == null || den == null) {
            JOptionPane.showMessageDialog(this, "Yêu cầu bạn nhập đầy đủ, không được để trống");
        } // Kiểm tra nếu ngày bắt đầu lớn hơn ngày kết thúc
        else if (tu.after(den)) {
            JOptionPane.showMessageDialog(null, "Ngày kết thúc phải sau ngày bắt đầu!");
            txtTuNgay.requestFocus();
            txtDenNgay.requestFocus();
        } // Thực hiện tìm kiếm nếu điều kiện đúng
        else {
            if (rp.DoanhThuTheoNgay(tu, den).isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy kết quả trong khoảng thời gian này.");
                txtTongDT.setText("0 VND");
                txtTongHDdaTT.setText("0");
            } else {
                JOptionPane.showMessageDialog(this, "Đã tìm thấy kết quả thành công!");
                // Gọi phương thức để hiển thị dữ liệu vào bảng hoặc thực hiện hành động mong muốn
                this.fillTable(rp.DoanhThuTheoNgay(tu, den));
                // Gọi phương thức truy vấn tổng doanh thu
                ArrayList<ThongKeModel> list = rp.DoanhThuTongTheoNgay(utilTuNgay, utilDenNgay);
                // Gọi phương thức lấy tổng số hóa đơn
                int tongSoHoaDon = rp.SoHoaDonDaThanhToan(utilTuNgay, utilDenNgay);
                if (list.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Không có dữ liệu trong khoảng thời gian này!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    // Lấy tổng doanh thu từ kết quả truy vấn
                    int tongDoanhThu = list.get(0).getTongGia(); // Lấy phần tử đầu tiên

                    // Đẩy tổng doanh thu lên JTextField
                   txtTongDT.setText(String.valueOf(tongDoanhThu) + " VND"); 

                    // txtSoHoaDon là JTextField cho số hóa đơn
                    // Đẩy tổng số hóa đơn lên JTextField
                    txtTongHDdaTT.setText(String.valueOf(tongSoHoaDon));
                    JOptionPane.showMessageDialog(this, "Đã tìm thấy dữ liệu!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnTKActionPerformed
    
// láy dữ liệu năm trong combobox để tìm kiếm
    private void yearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearComboBoxActionPerformed
        // TODO add your handling code here:
        // Lấy năm từ JComboBox (giả sử là kiểu String)
        // Lấy năm từ JComboBox
        String selectedYearStr = (String) yearComboBox.getSelectedItem(); // Giả sử JComboBox lưu năm dưới dạng String
        int selectedYear = Integer.parseInt(selectedYearStr); // Chuyển đổi sang int

        // Chuyển đổi năm thành java.util.Date
        Calendar calendar = Calendar.getInstance();
        calendar.set(Calendar.YEAR, selectedYear);
        calendar.set(Calendar.MONTH, Calendar.JANUARY); // Đặt tháng thành tháng 1
        calendar.set(Calendar.DAY_OF_MONTH, 1); // Đặt ngày thành ngày 1
        java.util.Date namTimKiem = calendar.getTime();

        // Gọi hàm lấy danh sách hóa đơn theo năm
        ArrayList<ThongKeModel> hoaDonList = rp.BangThongKeTheoNam(namTimKiem);

        // Cập nhật bảng dữ liệu
         fillTable(rp.BangThongKeTheoNam(namTimKiem));

        // Tính tổng doanh thu từ danh sách hóa đơn
        int tongDoanhThu = hoaDonList.stream().mapToInt(ThongKeModel::getTongGia).sum();

        // Gọi phương thức để lấy tổng số hóa đơn theo năm
        int tongSoHoaDon = rp.TongHoaDonTheoNam(namTimKiem);

        // Cập nhật JTextField
        txtTongDT.setText(String.valueOf(tongDoanhThu) + " VND"); // Hiển thị tổng doanh thu
        txtTongHDdaTT.setText(String.valueOf(tongSoHoaDon)); // Hiển thị tổng số hóa đơn đã thanh toán
    }//GEN-LAST:event_yearComboBoxActionPerformed
    
//nút báo cáo gửi qua mail
    private void btnBCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBCActionPerformed
        // Hiển thị hộp thoại để nhập email người nhận
    String emailNguoiNhan = JOptionPane.showInputDialog(this, "Nhập địa chỉ email người nhận:", "Gửi Báo Cáo", JOptionPane.PLAIN_MESSAGE);

    // Kiểm tra nếu người dùng không nhập email hoặc nhấn Hủy
    if (emailNguoiNhan == null || emailNguoiNhan.trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập địa chỉ email hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Lấy doanh thu và số hóa đơn từ các JTextField
    String doanhThuStr = txtTongDT.getText().replace(" VND", "").trim();
    String soHoaDonStr = txtTongHDdaTT.getText().trim();
    
    // Kiểm tra nếu giá trị doanh thu hoặc số hóa đơn là số hợp lệ
    int doanhThu = 0;
    int soHoaDon = 0;
    try {
        doanhThu = Integer.parseInt(doanhThuStr);
        soHoaDon = Integer.parseInt(soHoaDonStr);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Dữ liệu doanh thu hoặc số hóa đơn không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Tạo nội dung báo cáo
    String noiDungBaoCao = "Báo cáo doanh thu và số hóa đơn đã thanh toán:\n" +
                            "Tổng doanh thu: " + doanhThu + " VND\n" +
                            "Số hóa đơn đã thanh toán: " + soHoaDon;
    
    // Gửi email
    EmailSender.sendEmailReport(emailNguoiNhan, noiDungBaoCao); // Gọi hàm gửi email

    // Hiển thị thông báo thành công
    JOptionPane.showMessageDialog(this, "Báo cáo đã được gửi thành công!", "Thành công", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnBCActionPerformed

    //nút bấm biểu đồ
    private void btnBieuDoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBieuDoActionPerformed
        // TODO add your handling code here:
         // Lấy năm từ JComboBox
    String selectedYearStr = (String) yearComboBox.getSelectedItem();
    int selectedYear = Integer.parseInt(selectedYearStr);

    // Lấy danh sách hóa đơn theo năm
    Calendar calendar = Calendar.getInstance();
    calendar.set(Calendar.YEAR, selectedYear);
    calendar.set(Calendar.MONTH, Calendar.JANUARY);
    calendar.set(Calendar.DAY_OF_MONTH, 1);
    java.util.Date namTimKiem = calendar.getTime();

    ArrayList<ThongKeModel> hoaDonList = rp.BangThongKeTheoNam(namTimKiem);

    // Hiển thị biểu đồ với dữ liệu từ danh sách hóa đơn
    createBarChart(hoaDonList, selectedYear);
    }//GEN-LAST:event_btnBieuDoActionPerformed
    //hàm tạo biểu đồ
    private void createBarChart(ArrayList<ThongKeModel> hoaDonList, int year) {
     // Tạo một dataset cho biểu đồ
//    DefaultCategoryDataset dataset = new DefaultCategoryDataset();

    // Khởi tạo mảng để lưu doanh thu theo tháng
    int[] doanhThuTheoThang = new int[12];

    // Lặp qua danh sách hóa đơn để tính tổng doanh thu theo từng tháng
    for (ThongKeModel hoaDon : hoaDonList) {
        Calendar cal = Calendar.getInstance();
        cal.setTime(hoaDon.getNgayThanhToan()); // Giả sử ThongKeModel có phương thức getNgayThanhToan()
        int month = cal.get(Calendar.MONTH); // Lấy tháng từ ngày thanh toán
        doanhThuTheoThang[month] += hoaDon.getTongGia(); // Cộng doanh thu vào tháng tương ứng
    }

    // Thêm dữ liệu vào dataset
    String series = "Doanh thu";
    for (int i = 0; i < 12; i++) {
        String monthLabel = getMonthLabel(i); // Phương thức lấy tên tháng từ chỉ số tháng
//        dataset.addValue(doanhThuTheoThang[i], series, monthLabel);
    }

    // Tạo biểu đồ
//    JFreeChart barChart = ChartFactory.createBarChart(
//            "Biểu đồ doanh thu theo tháng - Năm " + year,
//            "Tháng",
//            "Doanh thu (VND)",
//            dataset
//    );

    // Tạo một panel để hiển thị biểu đồ với kích thước lớn hơn
//    ChartPanel chartPanel = new ChartPanel(barChart);
//    chartPanel.setPreferredSize(new java.awt.Dimension(1200, 700)); // Đặt kích thước rộng hơn
//
//    // Tạo một cửa sổ mới (JFrame) để hiển thị biểu đồ
//    JFrame chartFrame = new JFrame();
//    chartFrame.setTitle("Biểu đồ doanh thu theo tháng"); // Tiêu đề cửa sổ
//    chartFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Đóng cửa sổ biểu đồ mà không ảnh hưởng đến ứng dụng chính
//    chartFrame.setLayout(new BorderLayout());
//    chartFrame.add(chartPanel, BorderLayout.CENTER); // Đặt biểu đồ vào giữa cửa sổ
//
//    // Đặt kích thước và căn giữa cửa sổ trên màn hình
//    chartFrame.pack();
//    chartFrame.setLocationRelativeTo(null); // Đặt vị trí cửa sổ ra giữa màn hình
//    chartFrame.setVisible(true);
}
//lấy sô tháng trong năm
private String getMonthLabel(int monthIndex) {
    String[] months = {"Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6",
                       "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"};
    return months[monthIndex];
}
    // đẩy dữ liệu đã lọc theo năm vào bảng
    private void loadDataForYear(int year) {
        // Chuyển đổi năm thành java.util.Date
        Calendar calendar = Calendar.getInstance();
        calendar.set(Calendar.YEAR, year);
        calendar.set(Calendar.MONTH, Calendar.JANUARY); // Đặt tháng thành tháng 1
        calendar.set(Calendar.DAY_OF_MONTH, 1); // Đặt ngày thành ngày 1
        java.util.Date namTimKiem = calendar.getTime();

        // Lấy danh sách hóa đơn theo năm
        ArrayList<ThongKeModel> hoaDonList = rp.BangThongKeTheoNam(namTimKiem);

        // Kiểm tra xem có dữ liệu không
        if (hoaDonList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không có dữ liệu cho năm này!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            // Đặt lại giá trị trên JTextField nếu không có dữ liệu
            txtTongDT.setText("0 VND");
            txtTongHDdaTT.setText("0");
        } else {
            // Cập nhật bảng dữ liệu
            fillTable(rp.BangThongKeTheoNam(namTimKiem));

            // Tính tổng doanh thu từ danh sách
            int tongDoanhThu = hoaDonList.stream().mapToInt(ThongKeModel::getTongGia).sum();

            // Gọi phương thức để lấy tổng số hóa đơn theo năm
            int tongSoHoaDon = rp.TongHoaDonTheoNam(namTimKiem);

            // Cập nhật JTextField
            txtTongDT.setText(String.valueOf(tongDoanhThu) + " VND"); // Hiển thị tổng doanh thu
            txtTongHDdaTT.setText(String.valueOf(tongSoHoaDon)); // Hiển thị tổng số hóa đơn đã thanh toán
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBC;
    private javax.swing.JButton btnBieuDo;
    private javax.swing.JButton btnTK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblThongKe;
    private com.toedter.calendar.JDateChooser txtDenNgay;
    private javax.swing.JTextField txtTongDT;
    private javax.swing.JTextField txtTongHDdaTT;
    private com.toedter.calendar.JDateChooser txtTuNgay;
    private javax.swing.JComboBox<String> yearComboBox;
    // End of variables declaration//GEN-END:variables
}
